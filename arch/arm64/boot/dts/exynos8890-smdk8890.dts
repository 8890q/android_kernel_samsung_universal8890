/*
 * SAMSUNG EXYNOS8890 board device tree source
 *
 * Copyright (c) 2013 Samsung Electronics Co., Ltd.
 *		http://www.samsung.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
*/

/dts-v1/;
#include "exynos8890.dtsi"
#include "exynos8890-rmem.dtsi"
#include "modem-ss335ap-pdata.dtsi"
#include "exynos8890-sound-wm1840.dtsi"
#include "exynos8890-display-lcd.dtsi"

/ {
	model = "Samsung SMDK8890 board based on EXYNOS8890";
	compatible = "samsung,exynos8890", "samsung,SMDK8890";

	ect {
		parameter_address = <0x90000000>;
		parameter_size = <0x19000>;
	};

	pinctrl@10580000 {
		muic_irq: muic-irq {
			samsung,pins = "gpa1-1";
			samsung,pin-function = <0x0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	pinctrl@136D0000 {
		dwc2_vbus_en: dwc3-vbus-en {
		    samsung,pins ="gpd2-2";
		    samsung,pin-function = <1>;
		    samsung,pin-pud = <0>;
		    samsung,pin-drv = <0>;
	    };
	};

	pinctrl@14CC0000 {
		dwc3_vbus_en: dwc3-vbus-en {
		    samsung,pins ="gpe4-3";
		    samsung,pin-function = <1>;
		    samsung,pin-pud = <0>;
		    samsung,pin-drv = <0>;
	    };
	};

	pcie0@157A0000 {
		pcie,wlan-gpio = <&gpj1 3 0x1 /* WLAN_EN */ >;
		pcie,bt-gpio = <&gpe7 1 0x1 /* BT_EN */ >;
		status = "okay";
	};

	pcie1@157B0000 {
		pcie,wlan-gpio = <&gpf1 2 0x1 /* WLAN_EN */ >;
		pcie,bt-gpio = <&gpe7 2 0x1 /* BT_EN */ >;
		status = "okay";
	};

	hsi2c@14E60000 {
		status = "okay";
		muic-tsu6721@25 {
			compatible = "tsu6721-muic,i2c";
			reg = <0x25>;
			pinctrl-names = "default";
			pinctrl-0 = <&muic_irq>;
			muic,muic_int = <&gpa1 1 0>;
			gpios = <&gpi2 3 0x1>;
		};
	};

	dwc3_vbus: regulator-usb300 {
		compatible = "regulator-fixed";
		regulator-name = "UHOST_VBUS_EN";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpe4 3 1>;
		pinctrl-names = "default";
		pinctrl-0 = <&dwc3_vbus_en>;
		enable-active-high;
	};

	usb@15400000 {
		dwc3-vbus-supply = <&dwc3_vbus>;
	};

	dwc2_vbus: regulator-usb200 {
		compatible = "regulator-fixed";
		regulator-name = "UHOST2_VBUS_EN";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpd2 2 1>;
		pinctrl-names = "default";
		pinctrl-0 = <&dwc2_vbus_en>;
		enable-active-high;
		vin-supply = <&dwc3_vbus>;
	};

	usb@15510000 {
		dwc3-vbus-supply = <&dwc2_vbus>;
		status = "okay";

		dwc3 {
			maximum-speed = "high-speed";
			dr_mode = "otg";
			suspend_clk_freq = <66000000>;
		};
	};

	pinctrl@10580000 {
		codec_irq: codec-irq {
			samsung,pins = "gpa0-5";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <3>;
		};
	};

	pinctrl@14CC0000 {
		codec_reset: codec-reset {
			samsung,pins ="gpe6-5";
			samsung,pin-function = <1>;
			samsung,pin-pud = <1>;
			samsung,pin-con-pdn =<3>;
			samsung,pin-pud-pdn = <1>;
			samsung,pin-val = <0>;
		};
		codec_ldoena: codec-ldoena {
			samsung,pins ="gpe6-6";
			samsung,pin-function = <1>;
			samsung,pin-pud = <1>;
			samsung,pin-con-pdn =<3>;
			samsung,pin-pud-pdn = <1>;
			samsung,pin-val = <1>;
		};
	};

	i2s0: i2s@11440000 {
		samsung,supports-esa-dma;
		samsung,supports-sec-compr;
		status = "okay";
	};

	audio_codec_dummy: dummy-codec {
		compatible = "samsung,dummy-codec";
		status = "okay";
	};

	audio_cp_dummy: cp_dummy {
		compatible = "samsung,cp_dummy";
		status = "okay";
	};

	i2s_dummy: dummy-i2s {
		compatible = "samsung,dummy-i2s";
		status = "okay";
	};

	sound {
		compatible = "samsung,pacific-arizona";
		samsung,audio-cpu = <
			&i2s0                   /* primary */
			&i2s0                   /* secondary */
		        &audio_cp_dummy	 /* voice call */
			&eax                    /* eax0 ~ 3 */
			&eax
			&eax
			&eax
		        &i2s0		 /* compress */
			>;
		samsung,audio-codec = <
			&audio_codec
			&audio_codec
			&audio_codec
			&audio_codec
			&audio_codec
			&audio_codec
			&audio_codec
			&audio_codec
			>;
		mixer-paths = "mixer_paths_clearwater.xml";
		clocks = <&clock 1001>;
		clock-names = "mclk";

		/* AIF-DAI mapping table. UPDATE CAREFULLY */
		aif1-setup-index = <0>;
		aif2-setup-index = <2>;
		status = "okay";
	};

	memory@80000000 {
		device_type = "memory";

		reg = <0x0 0x80000000 0x80000000>;
	};
	memory@880000000 {
		device_type = "memory";

		reg = <0x00000008 0x80000000 0x80000000>;
	};

	tmuctrl_0: tmuctrl@10060000 {
		compatible = "samsung,exynos8890-tmu";
		reg = <0x0 0x10060000 0x200>;
		interrupts = <0 77 0>;
		sensor_type = <NORMAL_SENSOR>;
		max_trigger_level = <8>;
		non_hw_trigger_levels = <7>;

		/* Throttling Level */
		trigger_levels_0 = <66>;
		trigger_levels_1 = <71>;
		trigger_levels_2 = <76>;
		trigger_levels_3 = <81>;
		trigger_levels_4 = <86>;
		trigger_levels_5 = <91>;
		trigger_levels_6 = <96>;
		trigger_levels_7 = <115>;

		trigger_enable_0 = <ENABLE>;
		trigger_enable_1 = <ENABLE>;
		trigger_enable_2 = <ENABLE>;
		trigger_enable_3 = <ENABLE>;
		trigger_enable_4 = <ENABLE>;
		trigger_enable_5 = <ENABLE>;
		trigger_enable_6 = <ENABLE>;
		trigger_enable_7 = <ENABLE>;

		trigger_type_0 = <THROTTLE_ACTIVE>;
		trigger_type_1 = <THROTTLE_ACTIVE>;
		trigger_type_2 = <THROTTLE_ACTIVE>;
		trigger_type_3 = <THROTTLE_ACTIVE>;
		trigger_type_4 = <THROTTLE_ACTIVE>;
		trigger_type_5 = <THROTTLE_ACTIVE>;
		trigger_type_6 = <THROTTLE_ACTIVE>;
		trigger_type_7 = <HW_TRIP>;

		freq_tab_count = <3>;

		freq_clip_max_0 = <1560000>;
		freq_clip_max_1 = <1040000>;
		freq_clip_max_2 = <728000>;

		cooling_level_0 = <66>;
		cooling_level_1 = <71>;
		cooling_level_2 = <76>;

		hotplug_enable = <1>;
		hotplug_in_threshold = <75>;
		hotplug_out_threshold = <81>;
	};

	tmuctrl_1: tmuctrl@10064000 {
		compatible = "samsung,exynos8890-tmu";
		reg = <0x0 0x10064000 0x200>;
		interrupts = <0 75 0>;
		sensor_type = <NORMAL_SENSOR>;
		max_trigger_level = <8>;
		non_hw_trigger_levels = <7>;

		/* Throttling Level */
		trigger_levels_0 = <66>;
		trigger_levels_1 = <76>;
		trigger_levels_2 = <81>;
		trigger_levels_3 = <86>;
		trigger_levels_4 = <91>;
		trigger_levels_5 = <96>;
		trigger_levels_6 = <101>;
		trigger_levels_7 = <115>;

		trigger_enable_0 = <ENABLE>;
		trigger_enable_1 = <ENABLE>;
		trigger_enable_2 = <ENABLE>;
		trigger_enable_3 = <ENABLE>;
		trigger_enable_4 = <ENABLE>;
		trigger_enable_5 = <ENABLE>;
		trigger_enable_6 = <ENABLE>;
		trigger_enable_7 = <ENABLE>;

		trigger_type_0 = <THROTTLE_ACTIVE>;
		trigger_type_1 = <THROTTLE_ACTIVE>;
		trigger_type_2 = <THROTTLE_ACTIVE>;
		trigger_type_3 = <THROTTLE_ACTIVE>;
		trigger_type_4 = <THROTTLE_ACTIVE>;
		trigger_type_5 = <THROTTLE_ACTIVE>;
		trigger_type_6 = <THROTTLE_ACTIVE>;
		trigger_type_7 = <HW_TRIP>;

		freq_tab_count = <4>;

		freq_clip_max_0 = <1274000>;
		freq_clip_max_1 = <1170000>;
		freq_clip_max_2 = <962000>;
		freq_clip_max_3 = <442000>;

		cooling_level_0 = <66>;
		cooling_level_1 = <76>;
		cooling_level_2 = <81>;
		cooling_level_3 = <86>;
	};

	tmuctrl_2: tmuctrl@10068000 {
		compatible = "samsung,exynos8890-tmu";
		reg = <0x0 0x10068000 0x200>;
		interrupts = <0 78 0>;
		sensor_type = <NORMAL_SENSOR>;
		max_trigger_level = <8>;
		non_hw_trigger_levels = <7>;

		/* Throttling Level */
		trigger_levels_0 = <66>;
		trigger_levels_1 = <71>;
		trigger_levels_2 = <76>;
		trigger_levels_3 = <81>;
		trigger_levels_4 = <86>;
		trigger_levels_5 = <91>;
		trigger_levels_6 = <96>;
		trigger_levels_7 = <115>;

		trigger_enable_0 = <ENABLE>;
		trigger_enable_1 = <ENABLE>;
		trigger_enable_2 = <ENABLE>;
		trigger_enable_3 = <ENABLE>;
		trigger_enable_4 = <ENABLE>;
		trigger_enable_5 = <ENABLE>;
		trigger_enable_6 = <ENABLE>;
		trigger_enable_7 = <ENABLE>;

		trigger_type_0 = <THROTTLE_ACTIVE>;
		trigger_type_1 = <THROTTLE_ACTIVE>;
		trigger_type_2 = <THROTTLE_ACTIVE>;
		trigger_type_3 = <THROTTLE_ACTIVE>;
		trigger_type_4 = <THROTTLE_ACTIVE>;
		trigger_type_5 = <THROTTLE_ACTIVE>;
		trigger_type_6 = <THROTTLE_ACTIVE>;
		trigger_type_7 = <HW_TRIP>;

		freq_tab_count = <6>;

		freq_clip_max_0 = <600000>;
		freq_clip_max_1 = <600000>;
		freq_clip_max_2 = <546000>;
		freq_clip_max_3 = <419000>;
		freq_clip_max_4 = <260000>;
		freq_clip_max_5 = <260000>;

		cooling_level_0 = <66>;
		cooling_level_1 = <71>;
		cooling_level_2 = <76>;
		cooling_level_3 = <81>;
		cooling_level_4 = <86>;
		cooling_level_5 = <91>;

		/* gpu cooling related table */
		gpu_idx_num = <6>;
		/* flags, driver_data(index), frequency */
		gpu_cooling_table = < 0 0 600000
				      0 1 546000
				      0 2 419000
				      0 3 338000
				      0 4 260000
				      0 5 TABLE_END>;
	};

	tmuctrl_3: tmuctrl@1006C000 {
		compatible = "samsung,exynos8890-tmu";
		reg = <0x0 0x1006C000 0x200>;
		interrupts = <0 76 0>;
		sensor_type = <NORMAL_SENSOR>;
		max_trigger_level = <4>;
		non_hw_trigger_levels = <4>;

		/* Throttling Level */
		trigger_levels_0 = <86>;
		trigger_levels_1 = <91>;
		trigger_levels_2 = <96>;
		trigger_levels_3 = <100>;

		trigger_enable_0 = <ENABLE>;
		trigger_enable_1 = <ENABLE>;
		trigger_enable_2 = <ENABLE>;
		trigger_enable_3 = <ENABLE>;

		trigger_type_0 = <THROTTLE_ACTIVE>;
		trigger_type_1 = <THROTTLE_ACTIVE>;
		trigger_type_2 = <THROTTLE_ACTIVE>;
		trigger_type_3 = <THROTTLE_ACTIVE>;

		freq_tab_count = <3>;

		freq_clip_max_0 = <60>;
		freq_clip_max_1 = <15>;
		freq_clip_max_2 = <5>;

		cooling_level_0 = <86>;
		cooling_level_1 = <91>;
		cooling_level_2 = <96>;

		/* isp cooling related table */
		isp_idx_num = <7>;
		/* flags, driver_data(index), frequency */
		isp_cooling_table = < 0 0 63
				      0 1 62
				      0 2 61
				      0 3 60
				      0 4 15
				      0 5  5
				      0 6 TABLE_END>;
	};

	tmuctrl_4: tmuctrl_sub@10060000 {
		compatible = "samsung,exynos8890-tmu";
		reg = <0x0 0x10060000 0x200>;
		interrupts = <0 77 0>;
		sensor_type = <VIRTUAL_SENSOR>;
		max_trigger_level = <8>;
		non_hw_trigger_levels = <7>;

		/* Throttling Level */
		trigger_levels_0 = <76>;
		trigger_levels_1 = <81>;
		trigger_levels_2 = <86>;
		trigger_levels_3 = <91>;
		trigger_levels_4 = <96>;
		trigger_levels_5 = <101>;
		trigger_levels_6 = <106>;
		trigger_levels_7 = <115>;

		trigger_enable_0 = <ENABLE>;
		trigger_enable_1 = <ENABLE>;
		trigger_enable_2 = <ENABLE>;
		trigger_enable_3 = <ENABLE>;
		trigger_enable_4 = <ENABLE>;
		trigger_enable_5 = <ENABLE>;
		trigger_enable_6 = <ENABLE>;
		trigger_enable_7 = <ENABLE>;

		trigger_type_0 = <THROTTLE_ACTIVE>;
		trigger_type_1 = <THROTTLE_ACTIVE>;
		trigger_type_2 = <THROTTLE_ACTIVE>;
		trigger_type_3 = <THROTTLE_ACTIVE>;
		trigger_type_4 = <THROTTLE_ACTIVE>;
		trigger_type_5 = <THROTTLE_ACTIVE>;
		trigger_type_6 = <THROTTLE_ACTIVE>;
		trigger_type_7 = <HW_TRIP>;

		freq_tab_count = <3>;

		freq_clip_max_0 = <1872000>;
		freq_clip_max_1 = <1352000>;
		freq_clip_max_2 = <728000>;

		cooling_level_0 = <76>;
		cooling_level_1 = <81>;
		cooling_level_2 = <86>;

		hotplug_enable = <1>;
		hotplug_in_threshold = <93>;
		hotplug_out_threshold = <96>;
	};

	chosen {
		bootargs = "console=ram clk_ignore_unused ess_setup=0x86000000 pmic_info=3 androidboot.hardware=samsungexynos8890 androidboot.debug_level=0x4948 firmware_class.path=/vendor/firmware";
		linux,initrd-start = <0x82000000>;
		linux,initrd-end = <0x820FFFFF>;
	};

	fixed-rate-clocks {
		oscclk {
			compatible = "samsung,exynos8890-oscclk";
			clock-frequency = <26000000>;
		};
	};

	serial_2: uart@14C30000 {
		/* Enable UART channel for debug port */
		pinctrl-names = "default";
		pinctrl-0 = <&uart2_bus>;
		status = "okay";
	};

	pinctrl@136D0000 {
		g3d_dvs: g3d-dvs {
			samsung,pins = "gpb2-0";
			samsung,pin-function = <0x2>;
		};
	};

	pinctrl@14CC0000 {
		/* Warm reset information from AP */
		pm_wrsti: pm-wrsti {
			samsung,pins = "gpe6-7";
			samsung,pin-con-pdn = <3>;
		};
	};

	audio_pdata {
		compatible = "samsung,audio-pdata";

		aif_format = <0x1001 0x1001 0x1001>;

		aif_format_tdm = <0x1023 0x1023 0x1023>;

		/*seamless_voicewakeup;*/
		status = "okay";
	};

	pinctrl@10580000 {
		key_power: key-power {
			samsung,pins = "gpa2-7";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		key_voldown: key-voldown {
			samsung,pins = "gpa2-1";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		key_volup: key-volup {
			samsung,pins = "gpa2-0";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		chg_irq: chg-irq {
			samsung,pins = "gpa0-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};

	};

	gpio_keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&key_power &key_voldown &key_volup>;
		button@1 {
			label = "gpio-keys: KEY_POWER";
			interrupts = <7 0 0>;
			interrupt-parent = <&gpa2>;
			linux,code = <116>;
			gpios = <&gpa2 7 0xf>;
			gpio-key,wakeup = <1>;
		};
		button@2 {
			label = "gpio-keys: KEY_VOLUMEDOWN";
			interrupts = <1 0 0>;
			interrupt-parent = <&gpa2>;
			linux,code = <114>;
			gpios = <&gpa2 1 0xf>;
		};
		button@3 {
			label = "gpio-keys: KEY_VOLUMEUP";
			interrupts = <0 0 0>;
			interrupt-parent = <&gpa2>;
			linux,code = <115>;
			gpios = <&gpa2 0 0xf>;
		};
	};

	pinctrl@10580000 {
		pmic_irq: pmic-irq {
			samsung,pins = "gpa0-2";
			samsung,pin-pud = <3>;
			samsung,pin-drv = <3>;
		};

	};

	hsi2c@10550000{
		status = "okay";
		samsung,hs-mode;
		clock-frequency = <3000000>;
		samsung,hsi2c-batcher;
		samsung,use-apm;
		samsung,apm-always-clkon;
		s2mps16_pmic@66 {
			compatible = "samsung,s2mps16-pmic";
			reg = <0x66>;
			interrupts = <2 0 0>;
			interrupt-parent = <&gpa0>;
			pinctrl-names = "default";
			ten-bit-address;
			pinctrl-0 = <&pmic_irq &pm_wrsti &g3d_dvs>;
			gpios = <&gpb2 1 0>, <&gpb2 0 0x2>;
			smpl_warn_en = <1>; /* 1 : enable , 0 : disable*/
			/* range of smpl_warn_vth */
			/* 0x00 : 2.1V, 0x20 : 2.3V, 0x40 : 2.5V, 0x60 : 2.7V 0x80 : 2.9V */
			/* 0xA0 : 3.1V, 0xC0 : 3.3V, 0xE0 : 3.5V */
			smpl_warn_vth = <0x80>;
			/* LowBat_Hys[4:3] 00(100mV), 01(200mV), 10(300mV), 11(400mV) */
			smpl_warn_hys = <0x00>;
			adc-on;
			cache_data = <1>; /* 1: enable, 0 : disable */
			g3d_en = <1>; /* 1 : enable , 0 : disable */
			dvs_en = <1>; /* 1 : enable , 0 : disable */
			ldo8_7_seq = <0x05>;
			ldo10_9_seq = <0x63>;
			/* RTC: wtsr/smpl */
			wtsr_en = <1>; /* enable */
			smpl_en = <1>; /* enable */
			wtsr_timer_val = <3>;	/* 1000ms */
			smpl_timer_val = <4>;	/* 500ms */
			check_jigon = <0>; /* do not check jigon */
			/* RTC: If it's first boot, reset rtc to 1/1/2014 12:00:00(Wed) */
			init_time,sec = <0>;
			init_time,min = <0>;
			init_time,hour = <12>;
			init_time,mday = <1>;
			init_time,mon = <0>;
			init_time,year = <115>;
			init_time,wday = <4>;

			regulators {
				buck1_reg: BUCK1 {
					regulator-name = "vdd_mif";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <2>; /* controlled by PWREN_MIF */
				};

				buck2_reg: BUCK2 {
					regulator-name = "vdd_mngs";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				buck3_reg: BUCK3 {
					regulator-name = "vdd_apollo";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1200000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				buck4_reg: BUCK4 {
					regulator-name = "vdd_int";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <2>; /* controlled by PWREN_MIF */
				};

				buck5_reg: BUCK5 {
					regulator-name = "vdd_dispcam";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <2>; /* controlled by PWREN_MIF */
				};

				buck6_reg: BUCK6 {
					regulator-name = "vdd_g3d";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <1000000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				buck7_reg: BUCK7 {
					regulator-name = "vdd_mem";
					regulator-min-microvolt = <900000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				buck8_reg: BUCK8 {
					regulator-name = "vdd_lldo";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1500000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				buck9_reg: BUCK9 {
					regulator-name = "vdd_mldo";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <2100000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
				};

				buck11_reg: BUCK11 {
					regulator-name = "vdd_extra";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1300000>;
					regulator-always-on;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
				};

				ldo1_reg: LDO1 {
					regulator-name = "vdd_ldo1";
					regulator-min-microvolt = <500000>;
					regulator-max-microvolt = <900000>;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
					regulator-always-on;
				};

				ldo2_reg: LDO2 {
					regulator-name = "vqmmc";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
					regulator-always-on;
				};

				ldo3_reg: LDO3 {
					regulator-name = "vdd_ldo3";
					regulator-min-microvolt = <1620000>;
					regulator-max-microvolt = <1980000>;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <3>;
					regulator-always-on;
				};

				ldo4_reg: LDO4 {
					regulator-name = "vdd_ldo4";
					regulator-min-microvolt = <800000>;
					regulator-max-microvolt = <1110000>;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <1>;
					regulator-always-on;
				};

				ldo5_reg: LDO5 {
					regulator-name = "vdd_ldo5";
					regulator-min-microvolt = <1625000>;
					regulator-max-microvolt = <1975000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo6_reg: LDO6 {
					regulator-name = "vdd_ldo6";
					regulator-min-microvolt = <2250000>;
					regulator-max-microvolt = <3300000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo7_reg: LDO7 {
					regulator-name = "vdd_ldo7";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1250000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo8_reg: LDO8 {
					regulator-name = "vdd_ldo8";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1000000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo9_reg: LDO9 {
					regulator-name = "vdd_ldo9";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1000000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo10_reg: LDO10 {
					regulator-name = "vdd_ldo10";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1200000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo11_reg: LDO11 {
					regulator-name = "vdd_ldo11";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1000000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo12_reg: LDO12 {
					regulator-name = "vdd_ldo12";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1300000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo13_reg: LDO13 {
					regulator-name = "vdd_ldo13";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1300000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo25_reg: LDO25 {
					regulator-name = "vdd_ldo25";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1000000>;
					regulator-ramp-delay = <12000>;
					regulator-boot-on;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo26_reg: LDO26 {
					regulator-name = "vdd_ldo26";
					regulator-min-microvolt = <1000000>;
					regulator-max-microvolt = <1200000>;
					regulator-ramp-delay = <12000>;
					regulator-boot-on;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo27_reg: LDO27 {
					regulator-name = "vdd_ldo27";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1300000>;
					regulator-ramp-delay = <12000>;
					regulator-boot-on;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo28_reg: LDO28 {
					regulator-name = "vdd_ldo28";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo29_reg: LDO29 {
					regulator-name = "vmmc";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo30_reg: LDO30 {
					regulator-name = "vdd_ldo30";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo31_reg: LDO31 {
					regulator-name = "vdd_ldo31";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1300000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo32_reg: LDO32 {
					regulator-name = "vdd_ldo32";
					regulator-min-microvolt = <1500000>;
					regulator-max-microvolt = <2100000>;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <0>;
				};

				ldo33_reg: LDO33 {
					regulator-name = "vdd_ldo33";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
					regulator-initial-mode = <0>;
				};

				ldo34_reg: LDO34 {
					regulator-name = "vdd_ldo34";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo35_reg: LDO35 {
					regulator-name = "vdd_ldo35";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo36_reg: LDO36 {
					regulator-name = "vdd_ldo36";
					regulator-min-microvolt = <1500000>;
					regulator-max-microvolt = <2100000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo37_reg: LDO37 {
					regulator-name = "vdd_ldo37";
					regulator-min-microvolt = <1500000>;
					regulator-max-microvolt = <2100000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};

				ldo38_reg: LDO38 {
					regulator-name = "vdd_ldo38";
					regulator-min-microvolt = <700000>;
					regulator-max-microvolt = <1300000>;
					regulator-ramp-delay = <12000>;
					regulator-always-on;
					regulator-initial-mode = <1>;
				};
			};
		};
	};

	pinctrl@10580000 {
		sub_pmic_irq: sub-pmic-irq {
			samsung,pins = "gpa3-7";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		fuel_irq: fuel-irq {
			samsung,pins = "gpa3-4";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	ufs@0x155A0000 {
		status = "okay";
		ufs,pmd-attr-mode = "FAST";
		ufs,pmd-attr-lane = /bits/ 8 <1>;
		ufs,pmd-attr-gear = /bits/ 8 <3>;
		ufs,pmd-attr-hs-series = "HS_rate_b";
		ufs-opts-skip-connection-estab;
		ufs-opts-use-seperated-pclk;
		ufs-rx-adv-fine-gran-sup_en = <0>;
		ufs-rx-min-activate-time-cap = <7>;
		ufs-rx-hibern8-time-cap = <5>;
		ufs-pa-granularity = <6>;
		ufs-pa-tacctivate = <6>;
		ufs-pa-hibern8time = <20>;
		ufs-wait-cdr-lock = <0x6e>;

		vcc-supply = <&ufs_fixed_vcc>;
		vccq-supply = <&ufs_fixed_vccq>;
		vccq2-supply = <&ufs_fixed_vccq2>;
		vcc-fixed-regulator;
		vccq-fixed-regulator;
		vccq2-fixed-regulator;

		ufs-cap-clk-gating;
		ufs-cap-hibern8-with-clk-gating;

		phy-init =
			<PA_DBG_OPTION_SUITE 0x2e030103 PMD_ALL UNIPRO_DBG_MIB>,
			<0x155E 0x0 PMD_ALL UNIPRO_STD_MIB>,
			<0x00f 0xfa PMD_ALL PHY_PMA_COMN>,
			<0x010 0x82 PMD_ALL PHY_PMA_COMN>,
			<0x011 0x1e PMD_ALL PHY_PMA_COMN>,
			<0x012 0x80 PMD_ALL PHY_PMA_COMN>,
			<0x017 0x94 PMD_ALL PHY_PMA_COMN>,
			<0x034 0x31 PMD_ALL PHY_PMA_TRSV>,
			<0x035 0x40 PMD_ALL PHY_PMA_TRSV>,
			<0x038 0x3f PMD_ALL PHY_PMA_TRSV>,
			<0x049 0x00 PMD_ALL PHY_PMA_TRSV>,
			<0x04a 0x10 PMD_ALL PHY_PMA_TRSV>,
			<0x04c 0x5b PMD_ALL PHY_PMA_TRSV>,
			<0x05c 0x14 PMD_ALL PHY_PMA_TRSV>,
			<PA_DBG_OV_TM true PMD_ALL PHY_PCS_COMN>,
			<0x401 0x09 PMD_ALL PHY_PCS_COMN>,
			<0x27a 0x10 PMD_ALL PHY_PCS_RXTX>,
			<0x30e 0x01 PMD_ALL PHY_PCS_RXTX>,
			<0x31f 0x04 PMD_ALL PHY_PCS_RXTX>,
			<0x32c 0x00 PMD_ALL PHY_PCS_RXTX>,
			<PA_DBG_OV_TM false PMD_ALL PHY_PCS_COMN>,
			<0 0 0 0>;

		post-phy-init =
			<PA_DBG_MODE 0x1 PMD_ALL UNIPRO_DBG_MIB>,
			<PA_SAVECONFIGTIME 0xfa PMD_ALL UNIPRO_STD_MIB>,
			<PA_DBG_MODE 0x0 PMD_ALL UNIPRO_DBG_MIB>,
			<0 0 0 0>;

		calib-of-pwm =
			<PA_DBG_OV_TM true PMD_ALL PHY_PCS_COMN>,
			<0x376 0x00 PMD_PWM PHY_PCS_RXTX>,
			<PA_DBG_OV_TM false PMD_ALL PHY_PCS_COMN>,
			<0 0 0 0>;

		calib-of-hs-rate-a =
			<0x043 0xa6 (PMD_HS_G1_L1 | PMD_HS_G1_L1) PHY_PMA_TRSV>,
			<0x034 0x32 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x035 0x40 (PMD_HS_G1_L1 | PMD_HS_G2_L1) PHY_PMA_TRSV>,
			<0x035 0x42 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x037 0x43 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x41a 0x01 PMD_HS_G3_L1 PHY_PCS_COMN>,
			<0 0 0 0>;

		calib-of-hs-rate-b =
			<0x043 0xa6 (PMD_HS_G1_L1 | PMD_HS_G2_L1) PHY_PMA_TRSV>,
			<0x034 0x32 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x035 0x40 (PMD_HS_G1_L1 | PMD_HS_G2_L1) PHY_PMA_TRSV>,
			<0x035 0x42 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x037 0x43 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x41a 0x01 PMD_HS_G3_L1 PHY_PCS_COMN>,
			<0 0 0 0>;

		post-calib-of-pwm =
			<PA_DBG_OV_TM true PMD_ALL PHY_PCS_COMN>,
			<0x363 0x00 PMD_PWM PHY_PCS_RXTX>,
			<PA_DBG_OV_TM false PMD_ALL PHY_PCS_COMN>,
			<0 0 0 0>;

		post-calib-of-hs-rate-a =
			<0x04d 0x83 PMD_HS PHY_PMA_TRSV>,
			<0x41a 0x00 (PMD_HS_G3_L1 | PMD_HS_G3_L2) PHY_PCS_COMN>,
			<PA_DBG_OV_TM true PMD_ALL PHY_PCS_COMN>,
			<0x363 0x00 PMD_HS PHY_PCS_RXTX>,
			<PA_DBG_OV_TM false PMD_ALL PHY_PCS_COMN>,
			<0 0 0 0>;

		post-calib-of-hs-rate-b =
			<0x049 0x02 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x04a 0x37 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0 0 0 0>;

		pma-restore =
			<0x00f 0xfa PMD_ALL PHY_PMA_COMN>,
			<0x010 0x82 PMD_ALL PHY_PMA_COMN>,
			<0x011 0x1e PMD_ALL PHY_PMA_COMN>,
			<0x012 0x80 PMD_ALL PHY_PMA_COMN>,
			<0x017 0x94 PMD_ALL PHY_PMA_COMN>,
			<0x034 0x32 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x035 0x40 (PMD_HS_G1_L1 | PMD_HS_G2_L1) PHY_PMA_TRSV>,
			<0x035 0x42 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x037 0x43 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x038 0x3f PMD_ALL PHY_PMA_TRSV>,
			<0x049 0x02 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x04a 0x37 PMD_HS_G3_L1 PHY_PMA_TRSV>,
			<0x04c 0x5b PMD_ALL PHY_PMA_TRSV>,
			<0x05c 0x14 PMD_ALL PHY_PMA_TRSV>,
			<0 0 0 0>;
	};

	ufs_fixed_vcc: fixedregulator@0 {
		       compatible = "regulator-fixed";
		       regulator-name = "ufs-vcc";
		       gpio = <&gpg0 0 0>;
		       enable-active-high;
	};

	ufs_fixed_vccq: fixedregulator@1 {
			compatible = "regulator-fixed";
			regulator-name = "ufs-vccq";
			gpio = <&gpg0 0 0>;
			enable-active-high;
	};

	ufs_fixed_vccq2: fixedregulator@2 {
			 compatible = "regulator-fixed";
			 regulator-name = "ufs-vccq2";
			 gpio = <&gpg0 0 0>;
			 enable-active-high;
			 startup-delay-us = <2000>;
			 endup-delay-us = <2000>;
	};

	dwmmc2@15740000 {
		status = "okay";
		num-slots = <1>;
		supports-4bit;
		supports-cmd23;
		supports-erase;
		supports-highspeed;
		sd-uhs-sdr50;
		sd-uhs-sdr104;
		card-detect-gpio;
		bypass-smu;
		bypass-for-allpass;
		clock-gate;
		use-fine-tuning;
		card-init-hwacg-ctrl;
		switch_transfer;
		ignore-phase = <(1 << 7)>;
		samsung,voltage-int-extra = <0x7>;
		skip-init-mmc-scan;
		fifo-depth = <0x40>;
		qos_int_level = <255000>;
		samsung,dw-mshc-ciu-div = <3>;
		desc-size = <4>;
		card-detect-delay = <200>;
		data-timeout = <200>;
		hto-timeout = <80>;
		clock-frequency = <800000000>;
		samsung,dw-mshc-sdr-timing = <3 0 2 0>;
		samsung,dw-mshc-ddr-timing = <3 0 2 1>;
		samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
		samsung,dw-mshc-sdr104-timing = <3 0 3 0>;

		num-ref-clks = <9>;
		ciu_clkin = <25 50 50 25 50 100 200 50 50>;

		/* Swapping clock drive strength */
		clk-drive-number = <4>;
		pinctrl-names = "default",
			"fast-slew-rate-1x",
			"fast-slew-rate-2x",
			"fast-slew-rate-3x",
			"fast-slew-rate-4x";
		pinctrl-0 = <&sd2_clk &sd2_cmd &sd2_bus1 &sd2_bus4>;
		pinctrl-1 = <&sd2_clk_fast_slew_rate_1x>;
		pinctrl-2 = <&sd2_clk_fast_slew_rate_2x>;
		pinctrl-3 = <&sd2_clk_fast_slew_rate_3x>;
		pinctrl-4 = <&sd2_clk_fast_slew_rate_4x>;

		card-detect = <&gpj0 2 0x2>;
		slot@0 {
			reg = <0>;
			bus-width = <4>;
			disable-wp;
		};
	};

	pinctrl@10580000 {
		attn_irq: attn-irq {
			samsung,pins = "gpa0-3";
			samsung,pin-function = <0xf>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
		attn_input: attn-input {
			samsung,pins = "gpa0-3";
			samsung,pin-function = <0>;
			samsung,pin-pud = <1>;
		};
	};

	pinctrl@14CC0000 {
		tsp_id: tsp-id {
		samsung,pins = "gpe2-4";
		samsung,pin-function = <0x0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
		};
	};

	hsi2c@13640000 {
		status = "okay";
		sec-fuelgauge@36 {
			compatible = "sec-fuelgauge,i2c";
			reg = <0x36>;
			pinctrl-names = "default";
			pinctrl-0 = <&fuel_irq>;
			fuelgauge,fuel_int = <&gpa3 4 0>;
			fuelgauge,fuel_alert_soc = <2>;
			fuelgauge,capacity_max = <990>;
			fuelgauge,capacity_max_margin = <30>;
			fuelgauge,capacity_min = <0>;
			fuelgauge,capacity_calculation_type = <12>;
			fuelgaguge,repeated_fuelalert;
			fuelgauge,type_str = "SDI";
		};
	};

	hsi2c@14E10000 {
		status = "okay";
		touchscreen@49 {
			compatible = "stm,fts_touch";
			reg = <0x49>;
			pinctrl-names = "on_state", "off_state";
			pinctrl-0 = <&attn_irq &tsp_id>;
			pinctrl-1 = <&attn_input>;
			stm,tspid_gpio = <&gpe2 4 0>;
			stm,irq_gpio = <&gpa0 3 0>;
			stm,irq_type = <8200>;
			stm,max_coords = <1439 2559>;	/* x y */
			stm,regulator_dvdd = "vdd_ldo32";
			stm,regulator_avdd = "vdd_ldo33";
			stm,project_name = "jungfrau", "espresso8890";
		};
	};

	hsi2c@14E20000 {
		status = "okay";
		bq24193-charger@6b {
			compatible = "ti,bq24193";
			reg = <0x6b>;
			interrupts = <0 0 0>;
			interrupt-parent = <&gpa0>;
			pinctrl-names = "default";
			pinctrl-3 = <&chg_irq>;
			dev_name = "bq24193";
			battery,fuelgauge_name = "sec-fuelgauge";
		};
		s2mpb02_pmic@59 {
			compatible = "s2mpb02,s2mpb02mfd";
			reg = <0x59>;

			s2mpb02,wakeup;
			pinctrl-names = "default";
			pinctrl-0 = <&sub_pmic_irq>;

			regulators {
				_buck1_reg: s2mpb02-buck1 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <1700000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_buck2_reg: s2mpb02-buck2 {
					regulator-name = "VDD12_CAMCORE";
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <1500000>;
				};

				_buckboost_reg: s2mpb02-bb {
					regulator-min-microvolt = <2600000>;
					regulator-max-microvolt = <4000000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo1_reg: s2mpb02-ldo1 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <2187500>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo2_reg: s2mpb02-ldo2 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <2187500>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo3_reg: s2mpb02-ldo3 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <2187500>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo4_reg: s2mpb02-ldo4 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <2187500>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo5_reg: s2mpb02-ldo5 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <2187500>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo6_reg: s2mpb02-ldo6 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <3775000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo7_reg: s2mpb02-ldo7 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <3775000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo8_reg: s2mpb02-ldo8 {
					regulator-name = "VDD18_CAMIO";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
				};

				_ldo9_reg: s2mpb02-ldo9 {
					regulator-name = "VDD18_VTCAMIO";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
				};

				_ldo10_reg: s2mpb02-ldo10 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <3775000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo11_reg: s2mpb02-ldo11 {
					regulator-min-microvolt = <2800000>;
					regulator-max-microvolt = <2800000>;
				};

				_ldo12_reg: s2mpb02-ldo12 {
					regulator-name = "VDD28_CAMAF";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3375000>;
				};

				_ldo13_reg: s2mpb02-ldo13 {
					regulator-name = "VDDA30_VTCAMSEN";
					regulator-min-microvolt = <2800000>;
					regulator-max-microvolt = <3775000>;
				};

				_ldo14_reg: s2mpb02-ldo14 {
					regulator-name = "VDDA28_CAMSEN";
					regulator-min-microvolt = <2800000>;
					regulator-max-microvolt = <2800000>;
				};

				_ldo15_reg: s2mpb02-ldo15 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <3775000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo16_reg: s2mpb02-ldo16 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <3775000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo17_reg: s2mpb02-ldo17 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <3775000>;
					regulator-always-on;
					regulator-boot-on;
				};

				_ldo18_reg: s2mpb02-ldo18 {
					regulator-min-microvolt = <600000>;
					regulator-max-microvolt = <3775000>;
					regulator-always-on;
					regulator-boot-on;
				};
			};

			torch {
				torch1-gpio = "gpc0-1";
				flash1-gpio = "gpc0-3";

				status = "okay";

				leds1 {
					ledname = "leds-sec1";
					id = <0>;
					brightness = <0xC>;
					timeout = <0x3>;
				};

				leds2 {
					ledname = "torch-sec1";
					id = <1>;
					brightness = <0xC>;
					timeout = <0xF>;
				};
			};
		};
	};

	decon_f: decon_f@0x13960000 {
		/* EINT for TE */
		gpios = <&gpe2 6 0xf>, <&gpe3 1 0xf>;
		te_eint {
			/* NWEINT_GPE2_PEND(GPE2_6[6]), NWEINT_GPE2_MASK(GPE2_6[6]) */
			reg = <0x0 0x14CC0A14 0x4>, <0x0 0x14CC0914 0x4>;
		};
	};

	decon_s: decon_s@0x13E10000 {
		/* EINT for TE */
		gpios = <&gpe3 1 0xf>;
	};

	dsim_0: dsim@0x13900000 {
		lcd_info = <&s6e3ha2k>;
		/* lcd reset, power */
		gpios = <&gpe2 5 0x1>, <&gpe3 2 0x1>;
	};

	dsim_1: dsim@0x13910000 {
		lcd_info = <&s6e3ha2k>;
		/* lcd reset, power */
		gpios = <&gpe3 0 0x1>;
	};

	ion {
		compatible = "samsung,exynos5430-ion";
	};

	usb@15400000 {
		status = "okay";

		dwc3 {
			maximum-speed = "super-speed";
			dr_mode = "otg";
			suspend_clk_freq = <66000000>;
		};
	};

	phy@15500000 {
		is_not_vbus_pad;
	};

	usb_notifier {
		compatible = "samsung,usb-notifier";
		udc = <&udc>;
	};

	ipa_pdata {
		compatible = "samsung,exynos-ipa";

		control_temp = <90>;
		temp_threshold = <30>;
		enabled = <1>;
		tdp = <3500>;
		boost = <1>;
		ros_power = <500>;
		little_weight = <1024>;
		big_weight = <256>;
		gpu_weight = <256>;
		little_max_power = <1000>;
		big_max_power = <6552>;
		gpu_max_power = <3110>;
		hotplug_out_threshold = <10>;
		hotplug_in_threshold = <0>;
		enable_ctlr = <1>;
		ctlr.mult = <2>;
		ctlr.k_i = <1>;
		ctlr.k_d = <0>;
		ctlr.feed_forward = <1>;
		ctlr.integral_reset_value = <0>;
		ctlr.integral_cutoff = <0>;
		ctlr.integral_reset_threshold = <10>;
	};

	fimc_is@14370000 {
		rear_sensor_id = <20>; /* 2P8 */
		front_sensor_id = <7>; /* 6B2 */
		use_module_check;
		skip_cal_loading;
		fimc_is_dvfs {
			#define DVFS_INT_L0 690000
			#define DVFS_INT_L1 680000
			#define DVFS_INT_L2 670000
			#define DVFS_INT_L3 660000
			#define DVFS_INT_L4 650000
			#define DVFS_INT_L5 640000
			#define DVFS_INT_L6 630000
			#define DVFS_INT_L7 620000
			#define DVFS_INT_L8 610000
			#define DVFS_INT_L9 600000
			#define DVFS_INT_L10 468000
			#define DVFS_INT_L11 400000
			#define DVFS_INT_L12 336000
			#define DVFS_INT_L13 255000
			#define DVFS_INT_L14 200000
			#define DVFS_INT_L15 168000
			#define DVFS_INT_L16 127000

			#define DVFS_CAM_L0 690000
			#define DVFS_CAM_L1 680000
			#define DVFS_CAM_L2 670000
			#define DVFS_CAM_L3 660000
			#define DVFS_CAM_L4 650000
			#define DVFS_CAM_L5 640000
			#define DVFS_CAM_L6 630000
			#define DVFS_CAM_L7 620000
			#define DVFS_CAM_L8 610000
			#define DVFS_CAM_L9 600000

			#define DVFS_MIF_L0 1794000
			#define DVFS_MIF_L1 1716000
			#define DVFS_MIF_L2 1539000
			#define DVFS_MIF_L3 1352000
			#define DVFS_MIF_L4 1144000
			#define DVFS_MIF_L5 1014000
			#define DVFS_MIF_L6 845000
			#define DVFS_MIF_L7 676000
			#define DVFS_MIF_L8 546000
			#define DVFS_MIF_L9 421000
			#define DVFS_MIF_L10 286000
			#define DVFS_MIF_L11 208000

			table0 {
				desc = "default Max version";

				default_int = <DVFS_INT_L0>;
				default_cam = <DVFS_CAM_L0>;
				default_mif = <DVFS_MIF_L0>;
				default_i2c = <0>;

				front_preview_int = <DVFS_INT_L0>;
				front_preview_cam = <DVFS_CAM_L0>;
				front_preview_mif = <DVFS_MIF_L6>;
				front_preview_i2c = <0>;

				front_capture_int = <DVFS_INT_L0>;
				front_capture_cam = <DVFS_CAM_L0>;
				front_capture_mif = <DVFS_MIF_L0>;
				front_capture_i2c = <0>;

				front_video_int = <DVFS_INT_L0>;
				front_video_cam = <DVFS_CAM_L0>;
				front_video_mif = <DVFS_MIF_L6>;
				front_video_i2c = <0>;

				front_video_whd_int = <DVFS_INT_L0>;
				front_video_whd_cam = <DVFS_CAM_L0>;
				front_video_whd_mif = <DVFS_MIF_L6>;
				front_video_whd_i2c = <0>;

				front_video_capture_int = <DVFS_INT_L0>;
				front_video_capture_cam = <DVFS_CAM_L0>;
				front_video_capture_mif = <DVFS_MIF_L0>;
				front_video_capture_i2c = <0>;

				front_video_whd_capture_int = <DVFS_INT_L0>;
				front_video_whd_capture_cam = <DVFS_CAM_L0>;
				front_video_whd_capture_mif = <DVFS_MIF_L0>;
				front_video_whd_capture_i2c = <0>;

				front_vt1_int = <DVFS_INT_L0>;
				front_vt1_cam = <DVFS_CAM_L0>;
				front_vt1_mif = <DVFS_MIF_L6>;
				front_vt1_i2c = <0>;

				front_vt2_int = <DVFS_INT_L0>;
				front_vt2_cam = <DVFS_CAM_L0>;
				front_vt2_mif = <DVFS_MIF_L6>;
				front_vt2_i2c = <0>;

				rear_preview_fhd_int = <DVFS_INT_L0>;
				rear_preview_fhd_cam = <DVFS_CAM_L0>;
				rear_preview_fhd_mif = <DVFS_MIF_L6>;
				rear_preview_fhd_i2c = <0>;

				rear_preview_whd_int = <DVFS_INT_L0>;
				rear_preview_whd_cam = <DVFS_CAM_L0>;
				rear_preview_whd_mif = <DVFS_MIF_L6>;
				rear_preview_whd_i2c = <0>;

				rear_preview_uhd_int = <DVFS_INT_L0>;
				rear_preview_uhd_cam = <DVFS_CAM_L0>;
				rear_preview_uhd_mif = <DVFS_MIF_L6>;
				rear_preview_uhd_i2c = <0>;

				rear_capture_int = <DVFS_INT_L0>;
				rear_capture_cam = <DVFS_CAM_L0>;
				rear_capture_mif = <DVFS_MIF_L0>;
				rear_capture_i2c = <0>;

				rear_video_fhd_int = <DVFS_INT_L0>;
				rear_video_fhd_cam = <DVFS_CAM_L0>;
				rear_video_fhd_mif = <DVFS_MIF_L6>;
				rear_video_fhd_i2c = <0>;

				rear_video_whd_int = <DVFS_INT_L0>;
				rear_video_whd_cam = <DVFS_CAM_L0>;
				rear_video_whd_mif = <DVFS_MIF_L6>;
				rear_video_whd_i2c = <0>;

				rear_video_uhd_int = <DVFS_INT_L0>;
				rear_video_uhd_cam = <DVFS_CAM_L0>;
				rear_video_uhd_mif = <DVFS_MIF_L6>;
				rear_video_uhd_i2c = <0>;

				rear_video_fhd_capture_int = <DVFS_INT_L0>;
				rear_video_fhd_capture_cam = <DVFS_CAM_L0>;
				rear_video_fhd_capture_mif = <DVFS_MIF_L0>;
				rear_video_fhd_capture_i2c = <0>;

				rear_video_whd_capture_int = <DVFS_INT_L0>;
				rear_video_whd_capture_cam = <DVFS_CAM_L0>;
				rear_video_whd_capture_mif = <DVFS_MIF_L0>;
				rear_video_whd_capture_i2c = <0>;

				rear_video_uhd_capture_int = <DVFS_INT_L0>;
				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
				rear_video_uhd_capture_i2c = <0>;

				dual_preview_int = <DVFS_INT_L0>;
				dual_preview_cam = <DVFS_CAM_L0>;
				dual_preview_mif = <DVFS_MIF_L6>;
				dual_preview_i2c = <0>;

				dual_capture_int = <DVFS_INT_L0>;
				dual_capture_cam = <DVFS_CAM_L0>;
				dual_capture_mif = <DVFS_MIF_L0>;
				dual_capture_i2c = <0>;

				dual_video_int = <DVFS_INT_L0>;
				dual_video_cam = <DVFS_CAM_L0>;
				dual_video_mif = <DVFS_MIF_L6>;
				dual_video_i2c = <0>;

				dual_video_capture_int = <DVFS_INT_L0>;
				dual_video_capture_cam = <DVFS_CAM_L0>;
				dual_video_capture_mif = <DVFS_MIF_L0>;
				dual_video_capture_i2c = <0>;

				preview_high_speed_fps_int = <DVFS_INT_L0>;
				preview_high_speed_fps_cam = <DVFS_CAM_L0>;
				preview_high_speed_fps_mif = <DVFS_MIF_L2>;
				preview_high_speed_fps_i2c = <0>;

				video_high_speed_60fps_int = <DVFS_INT_L0>;
				video_high_speed_60fps_cam = <DVFS_CAM_L0>;
				video_high_speed_60fps_mif = <DVFS_MIF_L6>;
				video_high_speed_60fps_i2c = <0>;

				video_high_speed_120fps_int = <DVFS_INT_L0>;
				video_high_speed_120fps_cam = <DVFS_CAM_L0>;
				video_high_speed_120fps_mif = <DVFS_MIF_L2>;
				video_high_speed_120fps_i2c = <0>;

				video_high_speed_240fps_int = <DVFS_INT_L0>;
				video_high_speed_240fps_cam = <DVFS_CAM_L0>;
				video_high_speed_240fps_mif = <DVFS_MIF_L2>;
				video_high_speed_240fps_i2c = <0>;

				max_int = <DVFS_INT_L0>;
				max_cam = <DVFS_CAM_L0>;
				max_mif = <DVFS_MIF_L0>;
				max_i2c = <0>;
			};

			table1 {
				desc = "DVFS table for HAL3";

				default_int = <DVFS_INT_L0>;
				default_cam = <DVFS_CAM_L0>;
				default_mif = <DVFS_MIF_L0>;
				default_i2c = <0>;

				front_preview_int = <DVFS_INT_L0>;
				front_preview_cam = <DVFS_CAM_L0>;
				front_preview_mif = <DVFS_MIF_L0>;
				front_preview_i2c = <0>;

				front_capture_int = <DVFS_INT_L0>;
				front_capture_cam = <DVFS_CAM_L0>;
				front_capture_mif = <DVFS_MIF_L0>;
				front_capture_i2c = <0>;

				front_video_int = <DVFS_INT_L0>;
				front_video_cam = <DVFS_CAM_L0>;
				front_video_mif = <DVFS_MIF_L0>;
				front_video_i2c = <0>;

				front_video_whd_int = <DVFS_INT_L0>;
				front_video_whd_cam = <DVFS_CAM_L0>;
				front_video_whd_mif = <DVFS_MIF_L0>;
				front_video_whd_i2c = <0>;

				front_video_capture_int = <DVFS_INT_L0>;
				front_video_capture_cam = <DVFS_CAM_L0>;
				front_video_capture_mif = <DVFS_MIF_L0>;
				front_video_capture_i2c = <0>;

				front_video_whd_capture_int = <DVFS_INT_L0>;
				front_video_whd_capture_cam = <DVFS_CAM_L0>;
				front_video_whd_capture_mif = <DVFS_MIF_L0>;
				front_video_whd_capture_i2c = <0>;

				front_vt1_int = <DVFS_INT_L0>;
				front_vt1_cam = <DVFS_CAM_L0>;
				front_vt1_mif = <DVFS_MIF_L0>;
				front_vt1_i2c = <0>;

				front_vt2_int = <DVFS_INT_L0>;
				front_vt2_cam = <DVFS_CAM_L0>;
				front_vt2_mif = <DVFS_MIF_L0>;
				front_vt2_i2c = <0>;

				rear_preview_fhd_int = <DVFS_INT_L0>;
				rear_preview_fhd_cam = <DVFS_CAM_L0>;
				rear_preview_fhd_mif = <DVFS_MIF_L0>;
				rear_preview_fhd_i2c = <0>;

				rear_preview_whd_int = <DVFS_INT_L0>;
				rear_preview_whd_cam = <DVFS_CAM_L0>;
				rear_preview_whd_mif = <DVFS_MIF_L0>;
				rear_preview_whd_i2c = <0>;

				rear_preview_uhd_int = <DVFS_INT_L0>;
				rear_preview_uhd_cam = <DVFS_CAM_L0>;
				rear_preview_uhd_mif = <DVFS_MIF_L0>;
				rear_preview_uhd_i2c = <0>;

				rear_capture_int = <DVFS_INT_L0>;
				rear_capture_cam = <DVFS_CAM_L0>;
				rear_capture_mif = <DVFS_MIF_L0>;
				rear_capture_i2c = <0>;

				rear_video_fhd_int = <DVFS_INT_L0>;
				rear_video_fhd_cam = <DVFS_CAM_L0>;
				rear_video_fhd_mif = <DVFS_MIF_L0>;
				rear_video_fhd_i2c = <0>;

				rear_video_whd_int = <DVFS_INT_L0>;
				rear_video_whd_cam = <DVFS_CAM_L0>;
				rear_video_whd_mif = <DVFS_MIF_L0>;
				rear_video_whd_i2c = <0>;

				rear_video_uhd_int = <DVFS_INT_L0>;
				rear_video_uhd_cam = <DVFS_CAM_L0>;
				rear_video_uhd_mif = <DVFS_MIF_L0>;
				rear_video_uhd_i2c = <0>;

				rear_video_fhd_capture_int = <DVFS_INT_L0>;
				rear_video_fhd_capture_cam = <DVFS_CAM_L0>;
				rear_video_fhd_capture_mif = <DVFS_MIF_L0>;
				rear_video_fhd_capture_i2c = <0>;

				rear_video_whd_capture_int = <DVFS_INT_L0>;
				rear_video_whd_capture_cam = <DVFS_CAM_L0>;
				rear_video_whd_capture_mif = <DVFS_MIF_L0>;
				rear_video_whd_capture_i2c = <0>;

				rear_video_uhd_capture_int = <DVFS_INT_L0>;
				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
				rear_video_uhd_capture_i2c = <0>;

				dual_preview_int = <DVFS_INT_L0>;
				dual_preview_cam = <DVFS_CAM_L0>;
				dual_preview_mif = <DVFS_MIF_L0>;
				dual_preview_i2c = <0>;

				dual_capture_int = <DVFS_INT_L0>;
				dual_capture_cam = <DVFS_CAM_L0>;
				dual_capture_mif = <DVFS_MIF_L0>;
				dual_capture_i2c = <0>;

				dual_video_int = <DVFS_INT_L0>;
				dual_video_cam = <DVFS_CAM_L0>;
				dual_video_mif = <DVFS_MIF_L0>;
				dual_video_i2c = <0>;

				dual_video_capture_int = <DVFS_INT_L0>;
				dual_video_capture_cam = <DVFS_CAM_L0>;
				dual_video_capture_mif = <DVFS_MIF_L0>;
				dual_video_capture_i2c = <0>;

				preview_high_speed_fps_int = <DVFS_INT_L0>;
				preview_high_speed_fps_cam = <DVFS_CAM_L0>;
				preview_high_speed_fps_mif = <DVFS_MIF_L0>;
				preview_high_speed_fps_i2c = <0>;

				video_high_speed_60fps_int = <DVFS_INT_L0>;
				video_high_speed_60fps_cam = <DVFS_CAM_L0>;
				video_high_speed_60fps_mif = <DVFS_MIF_L0>;
				video_high_speed_60fps_i2c = <0>;

				video_high_speed_120fps_int = <DVFS_INT_L0>;
				video_high_speed_120fps_cam = <DVFS_CAM_L0>;
				video_high_speed_120fps_mif = <DVFS_MIF_L0>;
				video_high_speed_120fps_i2c = <0>;

				video_high_speed_240fps_int = <DVFS_INT_L0>;
				video_high_speed_240fps_cam = <DVFS_CAM_L0>;
				video_high_speed_240fps_mif = <DVFS_MIF_L0>;
				video_high_speed_240fps_i2c = <0>;

				max_int = <DVFS_INT_L0>;
				max_cam = <DVFS_CAM_L0>;
				max_mif = <DVFS_MIF_L0>;
				max_i2c = <0>;
			};
		};
	};

	fimc_is_sensor_2p8: fimc-is_sensor_2p8@5A {
		compatible = "samsung,exynos5-fimc-is-sensor-2p8";

		pinctrl-names = "pin0", "pin1";
		pinctrl-0 = <&fimc_is_i2c0 &fimc_is_mclk0_in>;
		pinctrl-1 = <&fimc_is_i2c0 &fimc_is_mclk0_fn>;

		position = <0>; /* Rear:0. Front:1 */
		id = <0>; /* sensor node id */
		mclk_ch = <0>;
		sensor_i2c_ch = <0>; /* I2C 0 */
		sensor_i2c_addr = <0x5A>;

		gpio_reset = <&gpc0 4 0x1>; /* sensor reset */
		status = "okay";

		af {
			product_name = <7>; /* ACTUATOR_NAME_AK7345 */
			i2c_addr = <0x18>;
			i2c_ch = <0>; /* I2C 0 */
		};

		flash {
			product_name = <11>; /* FLASH_GPIO */
			flash_first_gpio = <3>;
			flash_second_gpio = <6>;
		};
	};

	fimc_is_sensor_2p2: fimc-is_sensor_2p2@5A {
		compatible = "samsung,exynos5-fimc-is-sensor-2p2";

		pinctrl-names = "pin0", "pin1";
		pinctrl-0 = <&fimc_is_i2c0 &fimc_is_mclk0_in>;
		pinctrl-1 = <&fimc_is_i2c0 &fimc_is_mclk0_fn>;

		position = <0>; /* Rear:0. Front:1 */
		id = <0>; /* sensor node id */
		mclk_ch = <0>;
		sensor_i2c_ch = <0>; /* I2C 0 */
		sensor_i2c_addr = <0x5A>;

		gpio_reset = <&gpc0 4 0x1>; /* sensor reset */
		status = "okay";

		af {
			product_name = <7>; /* ACTUATOR_NAME_AK7345 */
			i2c_addr = <0x18>;
			i2c_ch = <0>; /* I2C 0 */
		};

		flash {
			product_name = <11>; /* FLASH_GPIO */
			flash_first_gpio = <3>;
			flash_second_gpio = <6>;
		};
	};

	fimc_is_sensor_6b2: fimc-is_sensor_6b2@20 {
		compatible = "samsung,exynos5-fimc-is-sensor-6b2";

		pinctrl-names = "pin0", "pin1";
		pinctrl-0 = <&fimc_is_i2c1 &fimc_is_mclk1_in>;
		pinctrl-1 = <&fimc_is_i2c1 &fimc_is_mclk1_fn>;

		position = <1>; /* Rear:0. Front:1 */
		id = <1>; /* sensor node id */
		mclk_ch = <1>;
		sensor_i2c_ch = <1>;
		sensor_i2c_addr = <0x6A>;

		gpio_reset = <&gpc1 0 0x1>;
		gpio_standby = <&gpi2 5 0x1>;
		status = "okay";
	};

	#define SENSOR_SCENARIO_NORMAL		0
	#define SENSOR_SCENARIO_VISION		1
	#define SENSOR_SCENARIO_EXTERNAL	2
	#define SENSOR_SCENARIO_OIS_FACTORY	3
	#define SENSOR_SCENARIO_VIRTUAL		9
	#define FLITE_ID_NOTHING 100

	fimc_is_sensor0: fimc_is_sensor@14000000 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <0>;
		csi_ch = <0>;
		flite_ch = <0>;
		is_bns = <1>;
		status = "okay";
	};

	fimc_is_sensor1: fimc_is_sensor@14100000 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <1>;
		csi_ch = <2>;
		flite_ch = <0>;
		is_bns = <1>;
		status = "okay";
	};

	fimc_is_sensor2: fimc_is_sensor@14010000 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <2>;
		csi_ch = <1>;
		flite_ch = <FLITE_ID_NOTHING>;
		is_bns = <0>;
		status = "okay";
	};

	fimc_is_sensor3: fimc_is_sensor@14020000 {
		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
		id = <3>;
		csi_ch = <3>;
		flite_ch = <FLITE_ID_NOTHING>;
		is_bns = <0>;
		status = "okay";
	};

	/* modem_interface */
	mif_pdata {
		reg = <0x0 0x20C7800 0x800>;
		pinctrl-names = "default";
		pinctrl-0 = <&isp_cp_uart_sel>;
		mif,ap_clk_table = <
			/* khz */
			1066000
			962000
			858000
			754000
			650000
			546000
			442000
			338000
			234000
			130000
			>;

		mif,mif_clk_table = <
			/* khz */
			962000
			832000
			676000
			572000
			416000
			286000
			208000
			>;
	};
};
